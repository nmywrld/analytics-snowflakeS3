import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { Cloud9ServiceException as __BaseException } from "./Cloud9ServiceException";
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  className?: string;
  code?: number;
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  className?: string;
  code?: number;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare const ConnectionType: {
  readonly CONNECT_SSH: "CONNECT_SSH";
  readonly CONNECT_SSM: "CONNECT_SSM";
};
export type ConnectionType =
  (typeof ConnectionType)[keyof typeof ConnectionType];
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface CreateEnvironmentEC2Request {
  name: string | undefined;
  description?: string;
  clientRequestToken?: string;
  instanceType: string | undefined;
  subnetId?: string;
  imageId?: string;
  automaticStopTimeMinutes?: number;
  ownerArn?: string;
  tags?: Tag[];
  connectionType?: ConnectionType | string;
  dryRun?: boolean;
}
export interface CreateEnvironmentEC2Result {
  environmentId?: string;
}
export declare class ForbiddenException extends __BaseException {
  readonly name: "ForbiddenException";
  readonly $fault: "client";
  className?: string;
  code?: number;
  constructor(opts: __ExceptionOptionType<ForbiddenException, __BaseException>);
}
export declare class InternalServerErrorException extends __BaseException {
  readonly name: "InternalServerErrorException";
  readonly $fault: "server";
  className?: string;
  code?: number;
  constructor(
    opts: __ExceptionOptionType<InternalServerErrorException, __BaseException>
  );
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  className?: string;
  code?: number;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class NotFoundException extends __BaseException {
  readonly name: "NotFoundException";
  readonly $fault: "client";
  className?: string;
  code?: number;
  constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  className?: string;
  code?: number;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export declare const MemberPermissions: {
  readonly READ_ONLY: "read-only";
  readonly READ_WRITE: "read-write";
};
export type MemberPermissions =
  (typeof MemberPermissions)[keyof typeof MemberPermissions];
export interface CreateEnvironmentMembershipRequest {
  environmentId: string | undefined;
  userArn: string | undefined;
  permissions: MemberPermissions | string | undefined;
}
export declare const Permissions: {
  readonly OWNER: "owner";
  readonly READ_ONLY: "read-only";
  readonly READ_WRITE: "read-write";
};
export type Permissions = (typeof Permissions)[keyof typeof Permissions];
export interface EnvironmentMember {
  permissions: Permissions | string | undefined;
  userId: string | undefined;
  userArn: string | undefined;
  environmentId: string | undefined;
  lastAccess?: Date;
}
export interface CreateEnvironmentMembershipResult {
  membership: EnvironmentMember | undefined;
}
export interface DeleteEnvironmentRequest {
  environmentId: string | undefined;
}
export interface DeleteEnvironmentResult {}
export interface DeleteEnvironmentMembershipRequest {
  environmentId: string | undefined;
  userArn: string | undefined;
}
export interface DeleteEnvironmentMembershipResult {}
export interface DescribeEnvironmentMembershipsRequest {
  userArn?: string;
  environmentId?: string;
  permissions?: (Permissions | string)[];
  nextToken?: string;
  maxResults?: number;
}
export interface DescribeEnvironmentMembershipsResult {
  memberships?: EnvironmentMember[];
  nextToken?: string;
}
export interface DescribeEnvironmentsRequest {
  environmentIds: string[] | undefined;
}
export declare const EnvironmentLifecycleStatus: {
  readonly CREATED: "CREATED";
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly CREATING: "CREATING";
  readonly DELETE_FAILED: "DELETE_FAILED";
  readonly DELETING: "DELETING";
};
export type EnvironmentLifecycleStatus =
  (typeof EnvironmentLifecycleStatus)[keyof typeof EnvironmentLifecycleStatus];
export interface EnvironmentLifecycle {
  status?: EnvironmentLifecycleStatus | string;
  reason?: string;
  failureResource?: string;
}
export declare const ManagedCredentialsStatus: {
  readonly DISABLED_BY_COLLABORATOR: "DISABLED_BY_COLLABORATOR";
  readonly DISABLED_BY_DEFAULT: "DISABLED_BY_DEFAULT";
  readonly DISABLED_BY_OWNER: "DISABLED_BY_OWNER";
  readonly ENABLED_BY_OWNER: "ENABLED_BY_OWNER";
  readonly ENABLED_ON_CREATE: "ENABLED_ON_CREATE";
  readonly FAILED_REMOVAL_BY_COLLABORATOR: "FAILED_REMOVAL_BY_COLLABORATOR";
  readonly FAILED_REMOVAL_BY_OWNER: "FAILED_REMOVAL_BY_OWNER";
  readonly PENDING_REMOVAL_BY_COLLABORATOR: "PENDING_REMOVAL_BY_COLLABORATOR";
  readonly PENDING_REMOVAL_BY_OWNER: "PENDING_REMOVAL_BY_OWNER";
  readonly PENDING_START_REMOVAL_BY_COLLABORATOR: "PENDING_START_REMOVAL_BY_COLLABORATOR";
  readonly PENDING_START_REMOVAL_BY_OWNER: "PENDING_START_REMOVAL_BY_OWNER";
};
export type ManagedCredentialsStatus =
  (typeof ManagedCredentialsStatus)[keyof typeof ManagedCredentialsStatus];
export declare const EnvironmentType: {
  readonly EC2: "ec2";
  readonly SSH: "ssh";
};
export type EnvironmentType =
  (typeof EnvironmentType)[keyof typeof EnvironmentType];
export interface Environment {
  id?: string;
  name?: string;
  description?: string;
  type: EnvironmentType | string | undefined;
  connectionType?: ConnectionType | string;
  arn: string | undefined;
  ownerArn: string | undefined;
  lifecycle?: EnvironmentLifecycle;
  managedCredentialsStatus?: ManagedCredentialsStatus | string;
}
export interface DescribeEnvironmentsResult {
  environments?: Environment[];
}
export interface DescribeEnvironmentStatusRequest {
  environmentId: string | undefined;
}
export declare const EnvironmentStatus: {
  readonly CONNECTING: "connecting";
  readonly CREATING: "creating";
  readonly DELETING: "deleting";
  readonly ERROR: "error";
  readonly READY: "ready";
  readonly STOPPED: "stopped";
  readonly STOPPING: "stopping";
};
export type EnvironmentStatus =
  (typeof EnvironmentStatus)[keyof typeof EnvironmentStatus];
export interface DescribeEnvironmentStatusResult {
  status: EnvironmentStatus | string | undefined;
  message: string | undefined;
}
export interface ListEnvironmentsRequest {
  nextToken?: string;
  maxResults?: number;
}
export interface ListEnvironmentsResult {
  nextToken?: string;
  environmentIds?: string[];
}
export interface ListTagsForResourceRequest {
  ResourceARN: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Tag[];
}
export declare class ConcurrentAccessException extends __BaseException {
  readonly name: "ConcurrentAccessException";
  readonly $fault: "client";
  className?: string;
  code?: number;
  constructor(
    opts: __ExceptionOptionType<ConcurrentAccessException, __BaseException>
  );
}
export interface TagResourceRequest {
  ResourceARN: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceARN: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export declare const ManagedCredentialsAction: {
  readonly DISABLE: "DISABLE";
  readonly ENABLE: "ENABLE";
};
export type ManagedCredentialsAction =
  (typeof ManagedCredentialsAction)[keyof typeof ManagedCredentialsAction];
export interface UpdateEnvironmentRequest {
  environmentId: string | undefined;
  name?: string;
  description?: string;
  managedCredentialsAction?: ManagedCredentialsAction | string;
}
export interface UpdateEnvironmentResult {}
export interface UpdateEnvironmentMembershipRequest {
  environmentId: string | undefined;
  userArn: string | undefined;
  permissions: MemberPermissions | string | undefined;
}
export interface UpdateEnvironmentMembershipResult {
  membership?: EnvironmentMember;
}
export declare const TagFilterSensitiveLog: (obj: Tag) => any;
export declare const CreateEnvironmentEC2RequestFilterSensitiveLog: (
  obj: CreateEnvironmentEC2Request
) => any;
export declare const EnvironmentFilterSensitiveLog: (obj: Environment) => any;
export declare const DescribeEnvironmentsResultFilterSensitiveLog: (
  obj: DescribeEnvironmentsResult
) => any;
export declare const ListTagsForResourceResponseFilterSensitiveLog: (
  obj: ListTagsForResourceResponse
) => any;
export declare const TagResourceRequestFilterSensitiveLog: (
  obj: TagResourceRequest
) => any;
export declare const UntagResourceRequestFilterSensitiveLog: (
  obj: UntagResourceRequest
) => any;
export declare const UpdateEnvironmentRequestFilterSensitiveLog: (
  obj: UpdateEnvironmentRequest
) => any;
