import { SENSITIVE_STRING } from "@aws-sdk/smithy-client";
import { Cloud9ServiceException as __BaseException } from "./Cloud9ServiceException";
export class BadRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "BadRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "BadRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, BadRequestException.prototype);
        this.className = opts.className;
        this.code = opts.code;
    }
}
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.className = opts.className;
        this.code = opts.code;
    }
}
export const ConnectionType = {
    CONNECT_SSH: "CONNECT_SSH",
    CONNECT_SSM: "CONNECT_SSM",
};
export class ForbiddenException extends __BaseException {
    constructor(opts) {
        super({
            name: "ForbiddenException",
            $fault: "client",
            ...opts,
        });
        this.name = "ForbiddenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ForbiddenException.prototype);
        this.className = opts.className;
        this.code = opts.code;
    }
}
export class InternalServerErrorException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerErrorException.prototype);
        this.className = opts.className;
        this.code = opts.code;
    }
}
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
        this.className = opts.className;
        this.code = opts.code;
    }
}
export class NotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "NotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotFoundException.prototype);
        this.className = opts.className;
        this.code = opts.code;
    }
}
export class TooManyRequestsException extends __BaseException {
    constructor(opts) {
        super({
            name: "TooManyRequestsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyRequestsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyRequestsException.prototype);
        this.className = opts.className;
        this.code = opts.code;
    }
}
export const MemberPermissions = {
    READ_ONLY: "read-only",
    READ_WRITE: "read-write",
};
export const Permissions = {
    OWNER: "owner",
    READ_ONLY: "read-only",
    READ_WRITE: "read-write",
};
export const EnvironmentLifecycleStatus = {
    CREATED: "CREATED",
    CREATE_FAILED: "CREATE_FAILED",
    CREATING: "CREATING",
    DELETE_FAILED: "DELETE_FAILED",
    DELETING: "DELETING",
};
export const ManagedCredentialsStatus = {
    DISABLED_BY_COLLABORATOR: "DISABLED_BY_COLLABORATOR",
    DISABLED_BY_DEFAULT: "DISABLED_BY_DEFAULT",
    DISABLED_BY_OWNER: "DISABLED_BY_OWNER",
    ENABLED_BY_OWNER: "ENABLED_BY_OWNER",
    ENABLED_ON_CREATE: "ENABLED_ON_CREATE",
    FAILED_REMOVAL_BY_COLLABORATOR: "FAILED_REMOVAL_BY_COLLABORATOR",
    FAILED_REMOVAL_BY_OWNER: "FAILED_REMOVAL_BY_OWNER",
    PENDING_REMOVAL_BY_COLLABORATOR: "PENDING_REMOVAL_BY_COLLABORATOR",
    PENDING_REMOVAL_BY_OWNER: "PENDING_REMOVAL_BY_OWNER",
    PENDING_START_REMOVAL_BY_COLLABORATOR: "PENDING_START_REMOVAL_BY_COLLABORATOR",
    PENDING_START_REMOVAL_BY_OWNER: "PENDING_START_REMOVAL_BY_OWNER",
};
export const EnvironmentType = {
    EC2: "ec2",
    SSH: "ssh",
};
export const EnvironmentStatus = {
    CONNECTING: "connecting",
    CREATING: "creating",
    DELETING: "deleting",
    ERROR: "error",
    READY: "ready",
    STOPPED: "stopped",
    STOPPING: "stopping",
};
export class ConcurrentAccessException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConcurrentAccessException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConcurrentAccessException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConcurrentAccessException.prototype);
        this.className = opts.className;
        this.code = opts.code;
    }
}
export const ManagedCredentialsAction = {
    DISABLE: "DISABLE",
    ENABLE: "ENABLE",
};
export const TagFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Key && { Key: SENSITIVE_STRING }),
    ...(obj.Value && { Value: SENSITIVE_STRING }),
});
export const CreateEnvironmentEC2RequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
    ...(obj.tags && { tags: SENSITIVE_STRING }),
});
export const EnvironmentFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
});
export const DescribeEnvironmentsResultFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.environments && { environments: obj.environments.map((item) => EnvironmentFilterSensitiveLog(item)) }),
});
export const ListTagsForResourceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Tags && { Tags: SENSITIVE_STRING }),
});
export const TagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Tags && { Tags: SENSITIVE_STRING }),
});
export const UntagResourceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.TagKeys && { TagKeys: SENSITIVE_STRING }),
});
export const UpdateEnvironmentRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.description && { description: SENSITIVE_STRING }),
});
